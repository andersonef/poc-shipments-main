version: '3'

services:
  app:
    container_name: poc-entregas-main
    build: 
      context: .
      dockerfile: DevDockerfile
    ports:
      - 3000:3000
    volumes:
      - ".:/app"
    networks:
      - pocNetwork
    depends_on:
      - db
    command: npm run dev
  
  worker-msaggr-output:
    container_name: worker-msaggr-output
    build:
      context: .
      dockerfile: DevDockerfile
    volumes:
      - ".:/app"
    networks:
      - pocNetwork
    depends_on:
      - app
      - rabbit
    command: npm run worker-ms-aggr

  worker-mszipcode-output:
    container_name: worker-zipcode-output
    build:
      context: .
      dockerfile: DevDockerfile
    volumes:
      - ".:/app"
    networks:
      - pocNetwork
    depends_on:
      - app
      - rabbit
    command: npm run worker-ms-zipcode

  rabbit:
    image: rabbitmq:3-management
    container_name: rabbitmq
    networks:
      - pocNetwork
    environment:
      RABBITMQ_DEFAULT_USER: test
      RABBITMQ_DEFAULT_PASS: test
    ports:
    - 15672:15672
  
  db:
    image: postgres
    environment:
      POSTGRES_PASSWORD: test
      POSTGRES_USER: test
      POSTGRES_DB: app
    networks:
      - pocNetwork


  adminer:
    image: adminer
    ports:
      - 8080:8080
    networks:
      - pocNetwork

networks:
  pocNetwork:
    name: poc-network
    driver: bridge